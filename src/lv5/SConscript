import sys
import os
import glob
from os.path import join, dirname, abspath, basename
Import('context root_dir')

jscre = context.SConscript(
  join(root_dir, 'src', 'lv5', 'third_party', 'jscre', 'SConscript'),
  variant_dir=join(root_dir, 'obj', 'third_party', 'jscre'),
  src=join(root_dir, 'src', 'lv5', 'third_party', 'jscre'),
  duplicate=False,
  exports="context"
)
netlib_dtoa = context.SConscript(
  join(root_dir, 'src', 'lv5', 'third_party', 'netlib_dtoa', 'SConscript'),
  variant_dir=join(root_dir, 'obj', 'third_party', 'netlib_dtoa'),
  src=join(root_dir, 'src', 'third_party', 'netlib_dtoa'),
  duplicate=False,
  exports="context"
)
v8_dtoa = context.SConscript(
  join(root_dir, 'src', 'lv5', 'third_party', 'v8_dtoa', 'SConscript'),
  variant_dir=join(root_dir, 'obj', 'third_party', 'v8_dtoa'),
  src=join(root_dir, 'src', 'third_party', 'v8_dtoa'),
  duplicate=False,
  exports="context"
)
conf = Configure(context.Clone())
#conf.CheckLib(library='boost_thread', language='cxx')
conf.CheckLib('pthread')
conf.CheckLib('gc')
env = conf.Finish()
env.Append(
    CCFLAGS=["-fno-strict-aliasing"],
    CPPDEFINES=["__STDC_FORMAT_MACROS"]
    )
objs = [ x for x in Glob('*.cc') if basename(x.rstr()) != 'main.cc']
lib = [env.StaticLibrary('lv5', [objs, jscre]), jscre, v8_dtoa, netlib_dtoa]
program = env.Program('lv5', ['main.cc', lib])
libs = env['LIBS']
Return('program', 'lib', 'libs')
